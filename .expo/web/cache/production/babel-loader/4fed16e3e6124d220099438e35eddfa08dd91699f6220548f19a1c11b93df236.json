{"ast":null,"code":"import*as React from'react';import View from\"react-native-web/dist/exports/View\";const Dummy=_ref=>{let{children}=_ref;return React.createElement(React.Fragment,null,children);};export const PanGestureHandler=Dummy;export const GestureHandlerRootView=View;export const GestureState={UNDETERMINED:0,FAILED:1,BEGAN:2,CANCELLED:3,ACTIVE:4,END:5};","map":{"version":3,"names":["React","View","Dummy","_ref","children","createElement","Fragment","PanGestureHandler","GestureHandlerRootView","GestureState","UNDETERMINED","FAILED","BEGAN","CANCELLED","ACTIVE","END"],"sources":["C:\\Users\\Carlos\\Desktop\\LightingGrabberApp\\LightingGrabberApp\\node_modules\\@react-navigation\\stack\\src\\views\\GestureHandler.tsx"],"sourcesContent":["import * as React from 'react';\nimport { View } from 'react-native';\nimport type { PanGestureHandlerProperties } from 'react-native-gesture-handler';\n\nconst Dummy: any = ({ children }: { children: React.ReactNode }) => (\n  <>{children}</>\n);\n\nexport const PanGestureHandler =\n  Dummy as React.ComponentType<PanGestureHandlerProperties>;\n\nexport const GestureHandlerRootView = View;\n\nexport const GestureState = {\n  UNDETERMINED: 0,\n  FAILED: 1,\n  BEGAN: 2,\n  CANCELLED: 3,\n  ACTIVE: 4,\n  END: 5,\n};\n\nexport type { PanGestureHandlerGestureEvent } from 'react-native-gesture-handler';\n"],"mappings":"AAAA,MAAO,GAAK,CAAAA,KAAK,KAAM,OAAO,QAAAC,IAAA,0CAI9B,KAAM,CAAAC,KAAU,CAAGC,IAAA,MAAC,CAAEC,QAAwC,CAAC,CAAAD,IAAA,OAC7D,CAAAH,KAAA,CAAAK,aAAA,CAAAL,KAAA,CAAAM,QAAA,MAAGF,QAAQ,CAAI,EAChB,CAED,MAAO,MAAM,CAAAG,iBAAiB,CAC5BL,KAAyD,CAE3D,MAAO,MAAM,CAAAM,sBAAsB,CAAGP,IAAI,CAE1C,MAAO,MAAM,CAAAQ,YAAY,CAAG,CAC1BC,YAAY,CAAE,CAAC,CACfC,MAAM,CAAE,CAAC,CACTC,KAAK,CAAE,CAAC,CACRC,SAAS,CAAE,CAAC,CACZC,MAAM,CAAE,CAAC,CACTC,GAAG,CAAE,CACP,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}