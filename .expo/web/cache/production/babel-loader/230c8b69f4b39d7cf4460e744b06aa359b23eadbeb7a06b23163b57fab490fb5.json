{"ast":null,"code":"import{CURRENCIES,USES_FAHRENHEIT,USES_IMPERIAL,USES_RTL_LAYOUT}from\"./constants\";function ensureCountryCode(countryCode){return countryCode===\"419\"?\"UN\":countryCode.toUpperCase();}function splitLanguageTag(languageTag){const[languageCode=\"en\",countryCode]=languageTag.split(\"-\");return{languageCode,countryCode};}function convertLanguageTagToLocale(languageTag,countryCodeFallback){let{languageCode,countryCode}=splitLanguageTag(languageTag);languageCode=languageCode.toLowerCase();countryCode=ensureCountryCode(countryCode||countryCodeFallback);return{languageCode,countryCode,languageTag:`${languageCode}-${countryCode}`,isRTL:USES_RTL_LAYOUT.includes(languageCode)};}function getCurrentLocale(){return convertLanguageTagToLocale(navigator.language,getCountry());}export function getCalendar(){return\"gregorian\";}export function getCountry(){const{languages=[navigator.language]}=navigator;for(let i=0;i<languages.length;i++){const language=languages[i];if(!language){continue;}const{countryCode}=splitLanguageTag(language);if(countryCode){return ensureCountryCode(countryCode);}}return\"US\";}export function getCurrencies(){const{languages=[navigator.language]}=navigator;const currencies=[];languages.forEach(language=>{const{countryCode}=splitLanguageTag(language);if(countryCode){const currency=CURRENCIES[ensureCountryCode(countryCode)];if(currency&&currencies.indexOf(currency)===-1){currencies.push(currency);}}});if(currencies.length===0){currencies.push(\"USD\");}return currencies;}export function getLocales(){const{languages=[navigator.language]}=navigator;const countryCode=getCountry();const cache=[];const locales=[];languages.forEach(language=>{const locale=convertLanguageTagToLocale(language,countryCode);if(cache.indexOf(locale.languageTag)===-1){locales.push(locale);cache.push(locale.languageTag);}});return locales;}export function getNumberFormatSettings(){const{languageTag}=getCurrentLocale();const formatter=new Intl.NumberFormat(languageTag);const separators=formatter.format(1000000.1).replace(/\\d/g,\"\");return{decimalSeparator:separators[separators.length-1]||\".\",groupingSeparator:separators[0]||\",\"};}export function getTemperatureUnit(){return USES_FAHRENHEIT.includes(getCountry())?\"fahrenheit\":\"celsius\";}export function getTimeZone(){const{languageTag}=getCurrentLocale();const formatter=new Intl.DateTimeFormat(languageTag,{hour:\"numeric\"});return formatter.resolvedOptions().timeZone||\"Etc/UTC\";}export function uses24HourClock(){const{languageTag}=getCurrentLocale();const formatter=new Intl.DateTimeFormat(languageTag,{hour:\"numeric\"});return!formatter.format(new Date(2000,0,1,20)).match(/am|pm/i);}export function usesMetricSystem(){return!USES_IMPERIAL.includes(getCountry());}export function usesAutoDateAndTime(){return;}export function usesAutoTimeZone(){return;}","map":{"version":3,"names":["CURRENCIES","USES_FAHRENHEIT","USES_IMPERIAL","USES_RTL_LAYOUT","ensureCountryCode","countryCode","toUpperCase","splitLanguageTag","languageTag","languageCode","split","convertLanguageTagToLocale","countryCodeFallback","toLowerCase","isRTL","includes","getCurrentLocale","navigator","language","getCountry","getCalendar","languages","i","length","getCurrencies","currencies","forEach","currency","indexOf","push","getLocales","cache","locales","locale","getNumberFormatSettings","formatter","Intl","NumberFormat","separators","format","replace","decimalSeparator","groupingSeparator","getTemperatureUnit","getTimeZone","DateTimeFormat","hour","resolvedOptions","timeZone","uses24HourClock","Date","match","usesMetricSystem","usesAutoDateAndTime","usesAutoTimeZone"],"sources":["C:\\Users\\Carlos\\Desktop\\LightingGrabberApp\\LightingGrabberApp\\node_modules\\react-native-localize\\src\\module.web.ts"],"sourcesContent":["import {\n  CURRENCIES,\n  USES_FAHRENHEIT,\n  USES_IMPERIAL,\n  USES_RTL_LAYOUT,\n} from \"./constants\";\nimport type {\n  Calendar,\n  Locale,\n  NumberFormatSettings,\n  TemperatureUnit,\n} from \"./types\";\n\nfunction ensureCountryCode(countryCode: string): string {\n  return countryCode === \"419\" ? \"UN\" : countryCode.toUpperCase();\n}\n\nfunction splitLanguageTag(languageTag: string): {\n  languageCode: string;\n  countryCode?: string;\n} {\n  const [languageCode = \"en\", countryCode] = languageTag.split(\"-\");\n  return { languageCode, countryCode };\n}\n\nfunction convertLanguageTagToLocale(\n  languageTag: string,\n  countryCodeFallback: string,\n): Locale {\n  let { languageCode, countryCode } = splitLanguageTag(languageTag);\n  languageCode = languageCode.toLowerCase();\n  countryCode = ensureCountryCode(countryCode || countryCodeFallback);\n\n  return {\n    languageCode,\n    countryCode,\n    languageTag: `${languageCode}-${countryCode}`,\n    isRTL: USES_RTL_LAYOUT.includes(languageCode),\n  };\n}\n\nfunction getCurrentLocale(): Locale {\n  return convertLanguageTagToLocale(navigator.language, getCountry());\n}\n\nexport function getCalendar(): Calendar {\n  return \"gregorian\";\n}\n\nexport function getCountry(): string {\n  const { languages = [navigator.language] } = navigator;\n\n  for (let i = 0; i < languages.length; i++) {\n    const language = languages[i];\n\n    if (!language) {\n      continue;\n    }\n\n    const { countryCode } = splitLanguageTag(language);\n\n    if (countryCode) {\n      return ensureCountryCode(countryCode);\n    }\n  }\n\n  return \"US\";\n}\n\nexport function getCurrencies(): string[] {\n  const { languages = [navigator.language] } = navigator;\n  const currencies: string[] = [];\n\n  languages.forEach((language) => {\n    const { countryCode } = splitLanguageTag(language);\n\n    if (countryCode) {\n      const currency = CURRENCIES[ensureCountryCode(countryCode)];\n\n      if (currency && currencies.indexOf(currency) === -1) {\n        currencies.push(currency);\n      }\n    }\n  });\n\n  if (currencies.length === 0) {\n    currencies.push(\"USD\");\n  }\n\n  return currencies;\n}\n\nexport function getLocales(): Locale[] {\n  const { languages = [navigator.language] } = navigator;\n  const countryCode = getCountry();\n  const cache: string[] = [];\n  const locales: Locale[] = [];\n\n  languages.forEach((language) => {\n    const locale = convertLanguageTagToLocale(language, countryCode);\n\n    if (cache.indexOf(locale.languageTag) === -1) {\n      locales.push(locale);\n      cache.push(locale.languageTag);\n    }\n  });\n\n  return locales;\n}\n\nexport function getNumberFormatSettings(): NumberFormatSettings {\n  const { languageTag } = getCurrentLocale();\n  const formatter = new Intl.NumberFormat(languageTag);\n  const separators = formatter.format(1000000.1).replace(/\\d/g, \"\");\n\n  return {\n    decimalSeparator: separators[separators.length - 1] || \".\",\n    groupingSeparator: separators[0] || \",\",\n  };\n}\n\nexport function getTemperatureUnit(): TemperatureUnit {\n  return USES_FAHRENHEIT.includes(getCountry()) ? \"fahrenheit\" : \"celsius\";\n}\n\nexport function getTimeZone(): string {\n  const { languageTag } = getCurrentLocale();\n  const formatter = new Intl.DateTimeFormat(languageTag, { hour: \"numeric\" });\n  return formatter.resolvedOptions().timeZone || \"Etc/UTC\";\n}\n\nexport function uses24HourClock(): boolean {\n  const { languageTag } = getCurrentLocale();\n  const formatter = new Intl.DateTimeFormat(languageTag, { hour: \"numeric\" });\n  return !formatter.format(new Date(2000, 0, 1, 20)).match(/am|pm/i);\n}\n\nexport function usesMetricSystem(): boolean {\n  return !USES_IMPERIAL.includes(getCountry());\n}\n\nexport function usesAutoDateAndTime(): boolean | undefined {\n  return;\n}\n\nexport function usesAutoTimeZone(): boolean | undefined {\n  return;\n}\n"],"mappings":"AAAA,OACEA,UAAU,CACVC,eAAe,CACfC,aAAa,CACbC,eAAe,KACV,aAAa,CAQpB,QAAS,CAAAC,iBAAiBA,CAACC,WAAmB,CAAU,CACtD,MAAO,CAAAA,WAAW,GAAK,KAAK,CAAG,IAAI,CAAGA,WAAW,CAACC,WAAW,CAAC,CAAC,CACjE,CAEA,QAAS,CAAAC,gBAAgBA,CAACC,WAAmB,CAG3C,CACA,KAAM,CAACC,YAAY,CAAG,IAAI,CAAEJ,WAAW,CAAC,CAAGG,WAAW,CAACE,KAAK,CAAC,GAAG,CAAC,CACjE,MAAO,CAAED,YAAY,CAAEJ,WAAY,CAAC,CACtC,CAEA,QAAS,CAAAM,0BAA0BA,CACjCH,WAAmB,CACnBI,mBAA2B,CACnB,CACR,GAAI,CAAEH,YAAY,CAAEJ,WAAY,CAAC,CAAGE,gBAAgB,CAACC,WAAW,CAAC,CACjEC,YAAY,CAAGA,YAAY,CAACI,WAAW,CAAC,CAAC,CACzCR,WAAW,CAAGD,iBAAiB,CAACC,WAAW,EAAIO,mBAAmB,CAAC,CAEnE,MAAO,CACLH,YAAY,CACZJ,WAAW,CACXG,WAAW,CAAG,GAAEC,YAAa,IAAGJ,WAAY,EAAC,CAC7CS,KAAK,CAAEX,eAAe,CAACY,QAAQ,CAACN,YAAY,CAC9C,CAAC,CACH,CAEA,QAAS,CAAAO,gBAAgBA,CAAA,CAAW,CAClC,MAAO,CAAAL,0BAA0B,CAACM,SAAS,CAACC,QAAQ,CAAEC,UAAU,CAAC,CAAC,CAAC,CACrE,CAEA,MAAO,SAAS,CAAAC,WAAWA,CAAA,CAAa,CACtC,MAAO,WAAW,CACpB,CAEA,MAAO,SAAS,CAAAD,UAAUA,CAAA,CAAW,CACnC,KAAM,CAAEE,SAAS,CAAG,CAACJ,SAAS,CAACC,QAAQ,CAAE,CAAC,CAAGD,SAAS,CAEtD,IAAK,GAAI,CAAAK,CAAC,CAAG,CAAC,CAAEA,CAAC,CAAGD,SAAS,CAACE,MAAM,CAAED,CAAC,EAAE,CAAE,CACzC,KAAM,CAAAJ,QAAQ,CAAGG,SAAS,CAACC,CAAC,CAAC,CAE7B,GAAI,CAACJ,QAAQ,CAAE,CACb,SACF,CAEA,KAAM,CAAEb,WAAY,CAAC,CAAGE,gBAAgB,CAACW,QAAQ,CAAC,CAElD,GAAIb,WAAW,CAAE,CACf,MAAO,CAAAD,iBAAiB,CAACC,WAAW,CAAC,CACvC,CACF,CAEA,MAAO,IAAI,CACb,CAEA,MAAO,SAAS,CAAAmB,aAAaA,CAAA,CAAa,CACxC,KAAM,CAAEH,SAAS,CAAG,CAACJ,SAAS,CAACC,QAAQ,CAAE,CAAC,CAAGD,SAAS,CACtD,KAAM,CAAAQ,UAAoB,CAAG,EAAE,CAE/BJ,SAAS,CAACK,OAAO,CAAER,QAAQ,EAAK,CAC9B,KAAM,CAAEb,WAAY,CAAC,CAAGE,gBAAgB,CAACW,QAAQ,CAAC,CAElD,GAAIb,WAAW,CAAE,CACf,KAAM,CAAAsB,QAAQ,CAAG3B,UAAU,CAACI,iBAAiB,CAACC,WAAW,CAAC,CAAC,CAE3D,GAAIsB,QAAQ,EAAIF,UAAU,CAACG,OAAO,CAACD,QAAQ,CAAC,GAAK,CAAC,CAAC,CAAE,CACnDF,UAAU,CAACI,IAAI,CAACF,QAAQ,CAAC,CAC3B,CACF,CACF,CAAC,CAAC,CAEF,GAAIF,UAAU,CAACF,MAAM,GAAK,CAAC,CAAE,CAC3BE,UAAU,CAACI,IAAI,CAAC,KAAK,CAAC,CACxB,CAEA,MAAO,CAAAJ,UAAU,CACnB,CAEA,MAAO,SAAS,CAAAK,UAAUA,CAAA,CAAa,CACrC,KAAM,CAAET,SAAS,CAAG,CAACJ,SAAS,CAACC,QAAQ,CAAE,CAAC,CAAGD,SAAS,CACtD,KAAM,CAAAZ,WAAW,CAAGc,UAAU,CAAC,CAAC,CAChC,KAAM,CAAAY,KAAe,CAAG,EAAE,CAC1B,KAAM,CAAAC,OAAiB,CAAG,EAAE,CAE5BX,SAAS,CAACK,OAAO,CAAER,QAAQ,EAAK,CAC9B,KAAM,CAAAe,MAAM,CAAGtB,0BAA0B,CAACO,QAAQ,CAAEb,WAAW,CAAC,CAEhE,GAAI0B,KAAK,CAACH,OAAO,CAACK,MAAM,CAACzB,WAAW,CAAC,GAAK,CAAC,CAAC,CAAE,CAC5CwB,OAAO,CAACH,IAAI,CAACI,MAAM,CAAC,CACpBF,KAAK,CAACF,IAAI,CAACI,MAAM,CAACzB,WAAW,CAAC,CAChC,CACF,CAAC,CAAC,CAEF,MAAO,CAAAwB,OAAO,CAChB,CAEA,MAAO,SAAS,CAAAE,uBAAuBA,CAAA,CAAyB,CAC9D,KAAM,CAAE1B,WAAY,CAAC,CAAGQ,gBAAgB,CAAC,CAAC,CAC1C,KAAM,CAAAmB,SAAS,CAAG,GAAI,CAAAC,IAAI,CAACC,YAAY,CAAC7B,WAAW,CAAC,CACpD,KAAM,CAAA8B,UAAU,CAAGH,SAAS,CAACI,MAAM,CAAC,SAAS,CAAC,CAACC,OAAO,CAAC,KAAK,CAAE,EAAE,CAAC,CAEjE,MAAO,CACLC,gBAAgB,CAAEH,UAAU,CAACA,UAAU,CAACf,MAAM,CAAG,CAAC,CAAC,EAAI,GAAG,CAC1DmB,iBAAiB,CAAEJ,UAAU,CAAC,CAAC,CAAC,EAAI,GACtC,CAAC,CACH,CAEA,MAAO,SAAS,CAAAK,kBAAkBA,CAAA,CAAoB,CACpD,MAAO,CAAA1C,eAAe,CAACc,QAAQ,CAACI,UAAU,CAAC,CAAC,CAAC,CAAG,YAAY,CAAG,SAAS,CAC1E,CAEA,MAAO,SAAS,CAAAyB,WAAWA,CAAA,CAAW,CACpC,KAAM,CAAEpC,WAAY,CAAC,CAAGQ,gBAAgB,CAAC,CAAC,CAC1C,KAAM,CAAAmB,SAAS,CAAG,GAAI,CAAAC,IAAI,CAACS,cAAc,CAACrC,WAAW,CAAE,CAAEsC,IAAI,CAAE,SAAU,CAAC,CAAC,CAC3E,MAAO,CAAAX,SAAS,CAACY,eAAe,CAAC,CAAC,CAACC,QAAQ,EAAI,SAAS,CAC1D,CAEA,MAAO,SAAS,CAAAC,eAAeA,CAAA,CAAY,CACzC,KAAM,CAAEzC,WAAY,CAAC,CAAGQ,gBAAgB,CAAC,CAAC,CAC1C,KAAM,CAAAmB,SAAS,CAAG,GAAI,CAAAC,IAAI,CAACS,cAAc,CAACrC,WAAW,CAAE,CAAEsC,IAAI,CAAE,SAAU,CAAC,CAAC,CAC3E,MAAO,CAACX,SAAS,CAACI,MAAM,CAAC,GAAI,CAAAW,IAAI,CAAC,IAAI,CAAE,CAAC,CAAE,CAAC,CAAE,EAAE,CAAC,CAAC,CAACC,KAAK,CAAC,QAAQ,CAAC,CACpE,CAEA,MAAO,SAAS,CAAAC,gBAAgBA,CAAA,CAAY,CAC1C,MAAO,CAAClD,aAAa,CAACa,QAAQ,CAACI,UAAU,CAAC,CAAC,CAAC,CAC9C,CAEA,MAAO,SAAS,CAAAkC,mBAAmBA,CAAA,CAAwB,CACzD,OACF,CAEA,MAAO,SAAS,CAAAC,gBAAgBA,CAAA,CAAwB,CACtD,OACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}