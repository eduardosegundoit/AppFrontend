{"ast":null,"code":"import React from'react';import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import{Formik}from'formik';import*as Yup from'yup';import axios from'axios';import{useDispatch,useSelector}from'react-redux';import{setJustEatData,setUser}from'../redux/actions';import{Layout,Input,Button,Card,Text,Icon}from'@ui-kitten/components';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const ConnectJustEatScreen=({navigation})=>{const dispatch=useDispatch();const user=useSelector(state=>state.user);const theme=useSelector(state=>state.theme);return _jsx(Formik,{initialValues:{justEatEmail:'',justEatPassword:''},validationSchema:Yup.object({justEatEmail:Yup.string().email('Invalid email address').required('Required'),justEatPassword:Yup.string().required('Required')}),onSubmit:async(values,{setSubmitting})=>{try{const justEatResponse=await axios.post('http://localhost:3000/justEat/connect',{justEatEmail:values.justEatEmail,justEatPassword:values.justEatPassword,userId:user.userId});if(justEatResponse.status===200){const justEatData={id:justEatResponse.data.courierId,token:justEatResponse.data.userToken};dispatch(setJustEatData(justEatData));const updatedUserResponse=await axios.post('http://localhost:3000/auth/update-just-eat-credentials',{userId:user.userId,justEatEmail:values.justEatEmail,justEatPassword:values.justEatPassword});if(updatedUserResponse.status===200){dispatch(setUser(updatedUserResponse.data));}navigation.navigate('Home');}else{console.error('Falha na conexão com Just Eat:',justEatResponse.data);}}catch(error){console.error('Erro ao conectar com Just Eat:',error.response?error.response.data:error.message);}finally{setSubmitting(false);}},children:({handleChange,handleBlur,handleSubmit,values,errors,touched})=>_jsxs(Layout,{style:[styles.container,theme==='dark'?styles.darkContainer:styles.lightContainer],level:\"1\",children:[_jsx(Card,{style:[styles.warningCard,theme==='dark'?styles.darkCard:styles.lightCard],status:\"warning\",children:_jsxs(Layout,{style:[styles.warningContent,theme==='dark'?styles.darkCard:styles.lightCard],children:[_jsx(Icon,{name:\"alert-triangle-outline\",fill:\"#FFAA00\",style:styles.icon}),_jsx(Text,{style:styles.warningText,children:\"Please note: You can only use this app with a valid Just Eat account.\"})]})}),_jsx(Input,{label:\"Just Eat Email\",onChangeText:handleChange('justEatEmail'),onBlur:handleBlur('justEatEmail'),value:values.justEatEmail,placeholder:\"Just Eat Email\",style:[styles.input,theme==='dark'?styles.darkInput:styles.lightInput],textStyle:{color:theme==='dark'?'#FFFFFF':'#222B45'},status:touched.justEatEmail&&errors.justEatEmail?'danger':'basic',caption:touched.justEatEmail&&errors.justEatEmail?errors.justEatEmail:''}),_jsx(Input,{label:\"Just Eat Password\",onChangeText:handleChange('justEatPassword'),onBlur:handleBlur('justEatPassword'),value:values.justEatPassword,placeholder:\"Just Eat Password\",secureTextEntry:true,style:[styles.input,theme==='dark'?styles.darkInput:styles.lightInput],textStyle:{color:theme==='dark'?'#FFFFFF':'#222B45'},status:touched.justEatPassword&&errors.justEatPassword?'danger':'basic',caption:touched.justEatPassword&&errors.justEatPassword?errors.justEatPassword:''}),_jsx(Button,{onPress:handleSubmit,style:styles.button,children:\"Connect to Just Eat\"})]})});};const styles=StyleSheet.create({container:{flex:1,justifyContent:'center',padding:16},darkContainer:{backgroundColor:'#222B45'},lightContainer:{backgroundColor:'#fff'},input:{marginBottom:12},darkInput:{backgroundColor:'#333B50'},lightInput:{backgroundColor:'#F7F9FC'},button:{marginVertical:8},warningCard:{marginBottom:24,borderRadius:8,padding:16},darkCard:{backgroundColor:'#333B50'},lightCard:{backgroundColor:'#F7F9FC'},warningContent:{flexDirection:'row',alignItems:'center'},icon:{width:32,height:32,marginRight:8},warningText:{flex:1,fontSize:16,color:'#FFAA00'}});export default ConnectJustEatScreen;","map":{"version":3,"names":["React","StyleSheet","Formik","Yup","axios","useDispatch","useSelector","setJustEatData","setUser","Layout","Input","Button","Card","Text","Icon","jsx","_jsx","jsxs","_jsxs","ConnectJustEatScreen","navigation","dispatch","user","state","theme","initialValues","justEatEmail","justEatPassword","validationSchema","object","string","email","required","onSubmit","values","setSubmitting","justEatResponse","post","userId","status","justEatData","id","data","courierId","token","userToken","updatedUserResponse","navigate","console","error","response","message","children","handleChange","handleBlur","handleSubmit","errors","touched","style","styles","container","darkContainer","lightContainer","level","warningCard","darkCard","lightCard","warningContent","name","fill","icon","warningText","label","onChangeText","onBlur","value","placeholder","input","darkInput","lightInput","textStyle","color","caption","secureTextEntry","onPress","button","create","flex","justifyContent","padding","backgroundColor","marginBottom","marginVertical","borderRadius","flexDirection","alignItems","width","height","marginRight","fontSize"],"sources":["C:/Users/Carlos/Desktop/LightingGrabberApp/LightingGrabberApp/src/screens/JustEatScreen.js"],"sourcesContent":["import React from 'react';\r\nimport { StyleSheet } from 'react-native';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport axios from 'axios';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { setJustEatData, setUser } from '../redux/actions';\r\nimport { Layout, Input, Button, Card, Text, Icon } from '@ui-kitten/components';\r\n\r\nconst ConnectJustEatScreen = ({ navigation }) => {\r\n  const dispatch = useDispatch();\r\n  const user = useSelector(state => state.user);\r\n  const theme = useSelector(state => state.theme);\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={{ justEatEmail: '', justEatPassword: '' }}\r\n      validationSchema={Yup.object({\r\n        justEatEmail: Yup.string().email('Invalid email address').required('Required'),\r\n        justEatPassword: Yup.string().required('Required')\r\n      })}\r\n      onSubmit={async (values, { setSubmitting }) => {\r\n        try {\r\n          // Primeira chamada para conectar à Just Eat\r\n          const justEatResponse = await axios.post('http://localhost:3000/justEat/connect', {\r\n            justEatEmail: values.justEatEmail,\r\n            justEatPassword: values.justEatPassword,\r\n            userId: user.userId\r\n          });\r\n\r\n          if (justEatResponse.status === 200) {\r\n            const justEatData = {\r\n              id: justEatResponse.data.courierId,\r\n              token: justEatResponse.data.userToken,\r\n            };\r\n\r\n            dispatch(setJustEatData(justEatData));\r\n\r\n            // Atualizar usuário com credenciais do Just Eat\r\n            const updatedUserResponse = await axios.post('http://localhost:3000/auth/update-just-eat-credentials', {\r\n              userId: user.userId,\r\n              justEatEmail: values.justEatEmail,\r\n              justEatPassword: values.justEatPassword\r\n            });\r\n\r\n            if (updatedUserResponse.status === 200) {\r\n              dispatch(setUser(updatedUserResponse.data));\r\n            }\r\n\r\n            navigation.navigate('Home');\r\n          } else {\r\n            console.error('Falha na conexão com Just Eat:', justEatResponse.data);\r\n          }\r\n        } catch (error) {\r\n          console.error('Erro ao conectar com Just Eat:', error.response ? error.response.data : error.message);\r\n        } finally {\r\n          setSubmitting(false);\r\n        }\r\n      }}\r\n    >\r\n      {({ handleChange, handleBlur, handleSubmit, values, errors, touched }) => (\r\n        <Layout style={[styles.container, theme === 'dark' ? styles.darkContainer : styles.lightContainer]} level='1'>\r\n          \r\n          <Card style={[styles.warningCard, theme === 'dark' ? styles.darkCard : styles.lightCard]} status='warning'>\r\n            <Layout style={[styles.warningContent, theme === 'dark' ? styles.darkCard : styles.lightCard]}>\r\n              <Icon name='alert-triangle-outline' fill='#FFAA00' style={styles.icon} />\r\n              <Text style={styles.warningText}>\r\n                Please note: You can only use this app with a valid Just Eat account.\r\n              </Text>\r\n            </Layout>\r\n          </Card>\r\n\r\n          <Input\r\n            label=\"Just Eat Email\"\r\n            onChangeText={handleChange('justEatEmail')}\r\n            onBlur={handleBlur('justEatEmail')}\r\n            value={values.justEatEmail}\r\n            placeholder=\"Just Eat Email\"\r\n            style={[styles.input, theme === 'dark' ? styles.darkInput : styles.lightInput]}\r\n            textStyle={{ color: theme === 'dark' ? '#FFFFFF' : '#222B45' }}\r\n            status={touched.justEatEmail && errors.justEatEmail ? 'danger' : 'basic'}\r\n            caption={touched.justEatEmail && errors.justEatEmail ? errors.justEatEmail : ''}\r\n          />\r\n          <Input\r\n            label=\"Just Eat Password\"\r\n            onChangeText={handleChange('justEatPassword')}\r\n            onBlur={handleBlur('justEatPassword')}\r\n            value={values.justEatPassword}\r\n            placeholder=\"Just Eat Password\"\r\n            secureTextEntry\r\n            style={[styles.input, theme === 'dark' ? styles.darkInput : styles.lightInput]}\r\n            textStyle={{ color: theme === 'dark' ? '#FFFFFF' : '#222B45' }}\r\n            status={touched.justEatPassword && errors.justEatPassword ? 'danger' : 'basic'}\r\n            caption={touched.justEatPassword && errors.justEatPassword ? errors.justEatPassword : ''}\r\n          />\r\n          <Button onPress={handleSubmit} style={styles.button}>\r\n            Connect to Just Eat\r\n          </Button>\r\n        </Layout>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    padding: 16,\r\n  },\r\n  darkContainer: {\r\n    backgroundColor: '#222B45',\r\n  },\r\n  lightContainer: {\r\n    backgroundColor: '#fff',\r\n  },\r\n  input: {\r\n    marginBottom: 12,\r\n  },\r\n  darkInput: {\r\n    backgroundColor: '#333B50',\r\n  },\r\n  lightInput: {\r\n    backgroundColor: '#F7F9FC',\r\n  },\r\n  button: {\r\n    marginVertical: 8,\r\n  },\r\n  warningCard: {\r\n    marginBottom: 24,\r\n    borderRadius: 8,\r\n    padding: 16,\r\n  },\r\n  darkCard: {\r\n    backgroundColor: '#333B50',\r\n  },\r\n  lightCard: {\r\n    backgroundColor: '#F7F9FC',\r\n  },\r\n  warningContent: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n  },\r\n  icon: {\r\n    width: 32,\r\n    height: 32,\r\n    marginRight: 8,\r\n  },\r\n  warningText: {\r\n    flex: 1,\r\n    fontSize: 16,\r\n    color: '#FFAA00',\r\n  },\r\n});\r\n\r\nexport default ConnectJustEatScreen;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}