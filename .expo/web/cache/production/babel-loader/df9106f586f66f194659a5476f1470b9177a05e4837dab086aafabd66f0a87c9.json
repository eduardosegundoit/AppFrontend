{"ast":null,"code":"import{getHeaderTitle,HeaderBackContext}from'@react-navigation/elements';import{NavigationContext,NavigationRouteContext}from'@react-navigation/native';import*as React from'react';import Animated from\"react-native-web/dist/exports/Animated\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import View from\"react-native-web/dist/exports/View\";import{forNoAnimation,forSlideLeft,forSlideRight,forSlideUp}from'../../TransitionConfigs/HeaderStyleInterpolators';import Header from'./Header';export default function HeaderContainer(_ref){let{mode,scenes,layout,getPreviousScene,getFocusedRoute,onContentHeightChange,style}=_ref;const focusedRoute=getFocusedRoute();const parentHeaderBack=React.useContext(HeaderBackContext);return React.createElement(Animated.View,{pointerEvents:\"box-none\",style:style},scenes.slice(-3).map((scene,i,self)=>{var _self,_self2;if(mode==='screen'&&i!==self.length-1||!scene){return null;}const{header,headerMode,headerShown=true,headerTransparent,headerStyleInterpolator}=scene.descriptor.options;if(headerMode!==mode||!headerShown){return null;}const isFocused=focusedRoute.key===scene.descriptor.route.key;const previousScene=getPreviousScene({route:scene.descriptor.route});let headerBack=parentHeaderBack;if(previousScene){const{options,route}=previousScene.descriptor;headerBack=previousScene?{title:getHeaderTitle(options,route.name)}:parentHeaderBack;}const previousDescriptor=(_self=self[i-1])===null||_self===void 0?void 0:_self.descriptor;const nextDescriptor=(_self2=self[i+1])===null||_self2===void 0?void 0:_self2.descriptor;const{headerShown:previousHeaderShown=true,headerMode:previousHeaderMode}=(previousDescriptor===null||previousDescriptor===void 0?void 0:previousDescriptor.options)||{};const nextHeaderlessScene=self.slice(i+1).find(scene=>{const{headerShown:currentHeaderShown=true,headerMode:currentHeaderMode}=(scene===null||scene===void 0?void 0:scene.descriptor.options)||{};return currentHeaderShown===false||currentHeaderMode==='screen';});const{gestureDirection:nextHeaderlessGestureDirection}=(nextHeaderlessScene===null||nextHeaderlessScene===void 0?void 0:nextHeaderlessScene.descriptor.options)||{};const isHeaderStatic=(previousHeaderShown===false||previousHeaderMode==='screen')&&!nextDescriptor||nextHeaderlessScene;const props={layout,back:headerBack,progress:scene.progress,options:scene.descriptor.options,route:scene.descriptor.route,navigation:scene.descriptor.navigation,styleInterpolator:mode==='float'?isHeaderStatic?nextHeaderlessGestureDirection==='vertical'||nextHeaderlessGestureDirection==='vertical-inverted'?forSlideUp:nextHeaderlessGestureDirection==='horizontal-inverted'?forSlideRight:forSlideLeft:headerStyleInterpolator:forNoAnimation};return React.createElement(NavigationContext.Provider,{key:scene.descriptor.route.key,value:scene.descriptor.navigation},React.createElement(NavigationRouteContext.Provider,{value:scene.descriptor.route},React.createElement(View,{onLayout:onContentHeightChange?e=>{const{height}=e.nativeEvent.layout;onContentHeightChange({route:scene.descriptor.route,height});}:undefined,pointerEvents:isFocused?'box-none':'none',accessibilityElementsHidden:!isFocused,importantForAccessibility:isFocused?'auto':'no-hide-descendants',style:mode==='float'&&!isFocused||headerTransparent?styles.header:null},header!==undefined?header(props):React.createElement(Header,props))));}));}const styles=StyleSheet.create({header:{position:'absolute',top:0,left:0,right:0}});","map":{"version":3,"names":["getHeaderTitle","HeaderBackContext","NavigationContext","NavigationRouteContext","React","Animated","StyleSheet","View","forNoAnimation","forSlideLeft","forSlideRight","forSlideUp","Header","HeaderContainer","_ref","mode","scenes","layout","getPreviousScene","getFocusedRoute","onContentHeightChange","style","focusedRoute","parentHeaderBack","useContext","createElement","pointerEvents","slice","map","scene","i","self","_self","_self2","length","header","headerMode","headerShown","headerTransparent","headerStyleInterpolator","descriptor","options","isFocused","key","route","previousScene","headerBack","title","name","previousDescriptor","nextDescriptor","previousHeaderShown","previousHeaderMode","nextHeaderlessScene","find","currentHeaderShown","currentHeaderMode","gestureDirection","nextHeaderlessGestureDirection","isHeaderStatic","props","back","progress","navigation","styleInterpolator","Provider","value","onLayout","e","height","nativeEvent","undefined","accessibilityElementsHidden","importantForAccessibility","styles","create","position","top","left","right"],"sources":["C:\\Users\\Carlos\\Desktop\\LightingGrabberApp\\LightingGrabberApp\\node_modules\\@react-navigation\\stack\\src\\views\\Header\\HeaderContainer.tsx"],"sourcesContent":["import { getHeaderTitle, HeaderBackContext } from '@react-navigation/elements';\nimport {\n  NavigationContext,\n  NavigationRouteContext,\n  ParamListBase,\n  Route,\n} from '@react-navigation/native';\nimport * as React from 'react';\nimport { Animated, StyleProp, StyleSheet, View, ViewStyle } from 'react-native';\n\nimport {\n  forNoAnimation,\n  forSlideLeft,\n  forSlideRight,\n  forSlideUp,\n} from '../../TransitionConfigs/HeaderStyleInterpolators';\nimport type {\n  Layout,\n  Scene,\n  StackHeaderMode,\n  StackHeaderProps,\n  StackNavigationProp,\n} from '../../types';\nimport Header from './Header';\n\nexport type Props = {\n  mode: StackHeaderMode;\n  layout: Layout;\n  scenes: (Scene | undefined)[];\n  getPreviousScene: (props: { route: Route<string> }) => Scene | undefined;\n  getFocusedRoute: () => Route<string>;\n  onContentHeightChange?: (props: {\n    route: Route<string>;\n    height: number;\n  }) => void;\n  style?: Animated.WithAnimatedValue<StyleProp<ViewStyle>>;\n};\n\nexport default function HeaderContainer({\n  mode,\n  scenes,\n  layout,\n  getPreviousScene,\n  getFocusedRoute,\n  onContentHeightChange,\n  style,\n}: Props) {\n  const focusedRoute = getFocusedRoute();\n  const parentHeaderBack = React.useContext(HeaderBackContext);\n\n  return (\n    <Animated.View pointerEvents=\"box-none\" style={style}>\n      {scenes.slice(-3).map((scene, i, self) => {\n        if ((mode === 'screen' && i !== self.length - 1) || !scene) {\n          return null;\n        }\n\n        const {\n          header,\n          headerMode,\n          headerShown = true,\n          headerTransparent,\n          headerStyleInterpolator,\n        } = scene.descriptor.options;\n\n        if (headerMode !== mode || !headerShown) {\n          return null;\n        }\n\n        const isFocused = focusedRoute.key === scene.descriptor.route.key;\n        const previousScene = getPreviousScene({\n          route: scene.descriptor.route,\n        });\n\n        let headerBack = parentHeaderBack;\n\n        if (previousScene) {\n          const { options, route } = previousScene.descriptor;\n\n          headerBack = previousScene\n            ? { title: getHeaderTitle(options, route.name) }\n            : parentHeaderBack;\n        }\n\n        // If the screen is next to a headerless screen, we need to make the header appear static\n        // This makes the header look like it's moving with the screen\n        const previousDescriptor = self[i - 1]?.descriptor;\n        const nextDescriptor = self[i + 1]?.descriptor;\n\n        const {\n          headerShown: previousHeaderShown = true,\n          headerMode: previousHeaderMode,\n        } = previousDescriptor?.options || {};\n\n        // If any of the next screens don't have a header or header is part of the screen\n        // Then we need to move this header offscreen so that it doesn't cover it\n        const nextHeaderlessScene = self.slice(i + 1).find((scene) => {\n          const {\n            headerShown: currentHeaderShown = true,\n            headerMode: currentHeaderMode,\n          } = scene?.descriptor.options || {};\n\n          return currentHeaderShown === false || currentHeaderMode === 'screen';\n        });\n\n        const { gestureDirection: nextHeaderlessGestureDirection } =\n          nextHeaderlessScene?.descriptor.options || {};\n\n        const isHeaderStatic =\n          ((previousHeaderShown === false || previousHeaderMode === 'screen') &&\n            // We still need to animate when coming back from next scene\n            // A hacky way to check this is if the next scene exists\n            !nextDescriptor) ||\n          nextHeaderlessScene;\n\n        const props: StackHeaderProps = {\n          layout,\n          back: headerBack,\n          progress: scene.progress,\n          options: scene.descriptor.options,\n          route: scene.descriptor.route,\n          navigation: scene.descriptor\n            .navigation as StackNavigationProp<ParamListBase>,\n          styleInterpolator:\n            mode === 'float'\n              ? isHeaderStatic\n                ? nextHeaderlessGestureDirection === 'vertical' ||\n                  nextHeaderlessGestureDirection === 'vertical-inverted'\n                  ? forSlideUp\n                  : nextHeaderlessGestureDirection === 'horizontal-inverted'\n                  ? forSlideRight\n                  : forSlideLeft\n                : headerStyleInterpolator\n              : forNoAnimation,\n        };\n\n        return (\n          <NavigationContext.Provider\n            key={scene.descriptor.route.key}\n            value={scene.descriptor.navigation}\n          >\n            <NavigationRouteContext.Provider value={scene.descriptor.route}>\n              <View\n                onLayout={\n                  onContentHeightChange\n                    ? (e) => {\n                        const { height } = e.nativeEvent.layout;\n\n                        onContentHeightChange({\n                          route: scene.descriptor.route,\n                          height,\n                        });\n                      }\n                    : undefined\n                }\n                pointerEvents={isFocused ? 'box-none' : 'none'}\n                accessibilityElementsHidden={!isFocused}\n                importantForAccessibility={\n                  isFocused ? 'auto' : 'no-hide-descendants'\n                }\n                style={\n                  // Avoid positioning the focused header absolutely\n                  // Otherwise accessibility tools don't seem to be able to find it\n                  (mode === 'float' && !isFocused) || headerTransparent\n                    ? styles.header\n                    : null\n                }\n              >\n                {header !== undefined ? header(props) : <Header {...props} />}\n              </View>\n            </NavigationRouteContext.Provider>\n          </NavigationContext.Provider>\n        );\n      })}\n    </Animated.View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  header: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n  },\n});\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}