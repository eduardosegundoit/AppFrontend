{"ast":null,"code":"function _extends(){_extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}import*as React from'react';import I18nManager from\"react-native-web/dist/exports/I18nManager\";import InteractionManager from\"react-native-web/dist/exports/InteractionManager\";import Keyboard from\"react-native-web/dist/exports/Keyboard\";import Platform from\"react-native-web/dist/exports/Platform\";import StatusBar from\"react-native-web/dist/exports/StatusBar\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import View from\"react-native-web/dist/exports/View\";import Animated,{interpolate,runOnJS,useAnimatedGestureHandler,useAnimatedStyle,useDerivedValue,useSharedValue,withSpring}from'react-native-reanimated';import DrawerProgressContext from'../../utils/DrawerProgressContext';import{GestureState,PanGestureHandler}from'../GestureHandler';import Overlay from'./Overlay';const SWIPE_DISTANCE_MINIMUM=5;const DEFAULT_DRAWER_WIDTH='80%';const _worklet_14676585981950_init_data={code:\"function anonymous(value,start,end){return Math.min(Math.max(value,start),end);}\"};const minmax=function(){const anonymous=function(value,start,end){return Math.min(Math.max(value,start),end);};anonymous.__closure={};anonymous.__workletHash=14676585981950;anonymous.__initData=_worklet_14676585981950_init_data;return anonymous;}();const _worklet_16471748621831_init_data={code:\"function anonymous(open){const{drawerPosition,drawerWidth}=this.__closure;if(drawerPosition==='left'){return open?0:-drawerWidth;}return open?0:drawerWidth;}\"};const _worklet_1956860183394_init_data={code:\"function anonymous(_ref2){const{getDrawerTranslationX,touchStartX,touchX,translationX,withSpring,runOnJS,onOpen,onClose}=this.__closure;let{open:open,isUserInitiated:isUserInitiated,velocity:velocity}=_ref2;const translateX=getDrawerTranslationX(open);touchStartX.value=0;touchX.value=0;translationX.value=withSpring(translateX,{velocity:velocity,stiffness:1000,damping:500,mass:3,overshootClamping:true,restDisplacementThreshold:0.01,restSpeedThreshold:0.01,reduceMotion:'never'});if(!isUserInitiated){return;}if(open){runOnJS(onOpen)();}else{runOnJS(onClose)();}}\"};const _worklet_9028705678581_init_data={code:\"function anonymous(event,ctx){const{translationX,gestureState,touchStartX}=this.__closure;ctx.hasCalledOnStart=false;ctx.startX=translationX.value;gestureState.value=event.state;touchStartX.value=event.x;}\"};const _worklet_12554508167919_init_data={code:\"function anonymous(event,ctx){const{touchX,translationX,gestureState,runOnJS,onGestureStart}=this.__closure;touchX.value=event.x;translationX.value=ctx.startX+event.translationX;gestureState.value=event.state;if(!ctx.hasCalledOnStart){ctx.hasCalledOnStart=true;runOnJS(onGestureStart)();}}\"};const _worklet_8567746620610_init_data={code:\"function anonymous(event){const{gestureState,SWIPE_DISTANCE_MINIMUM,swipeVelocityThreshold,swipeDistanceThreshold,drawerPosition,open,toggleDrawer}=this.__closure;gestureState.value=event.state;const nextOpen=Math.abs(event.translationX)>SWIPE_DISTANCE_MINIMUM&&Math.abs(event.translationX)>swipeVelocityThreshold||Math.abs(event.translationX)>swipeDistanceThreshold?drawerPosition==='left'?(event.velocityX===0?event.translationX:event.velocityX)>0:(event.velocityX===0?event.translationX:event.velocityX)<0:open;toggleDrawer({open:nextOpen,isUserInitiated:true,velocity:event.velocityX});}\"};const _worklet_16133114243642_init_data={code:\"function anonymous(){const{runOnJS,onGestureFinish}=this.__closure;runOnJS(onGestureFinish)();}\"};const _worklet_15907379420268_init_data={code:\"function anonymous(){const{drawerType,gestureState,GestureState,minmax,drawerPosition,touchStartX,drawerWidth,dimensions,translationX}=this.__closure;const touchDistance=drawerType==='front'&&gestureState.value===GestureState.ACTIVE?minmax(drawerPosition==='left'?touchStartX.value-drawerWidth:dimensions.width-drawerWidth-touchStartX.value,0,dimensions.width):0;const translateX=drawerPosition==='left'?minmax(translationX.value+touchDistance,-drawerWidth,0):minmax(translationX.value-touchDistance,0,drawerWidth);return translateX;}\"};const _worklet_2542456789708_init_data={code:\"function anonymous(){const{dimensions,drawerWidth,drawerType,translateX,drawerPosition,isRTL}=this.__closure;const distanceFromEdge=dimensions.width-drawerWidth;return{transform:drawerType==='permanent'?[]:[{translateX:(drawerType==='back'?0:translateX.value)+(drawerPosition==='left'?isRTL?-distanceFromEdge:0:isRTL?0:distanceFromEdge)}]};}\"};const _worklet_2846592509997_init_data={code:\"function anonymous(){const{drawerType,translateX,drawerWidth,drawerPosition}=this.__closure;return{transform:drawerType==='permanent'?[]:[{translateX:drawerType==='front'?0:translateX.value+drawerWidth*(drawerPosition==='left'?1:-1)}]};}\"};const _worklet_3581967911583_init_data={code:\"function anonymous(){const{drawerType,interpolate,translateX,getDrawerTranslationX}=this.__closure;return drawerType==='permanent'?1:interpolate(translateX.value,[getDrawerTranslationX(false),getDrawerTranslationX(true)],[0,1]);}\"};export default function Drawer(_ref){let{dimensions,drawerPosition,drawerStyle,drawerType,gestureHandlerProps,hideStatusBarOnOpen,keyboardDismissMode,onClose,onOpen,open,overlayStyle,renderDrawerContent,renderSceneContent,statusBarAnimation,swipeDistanceThreshold,swipeEdgeWidth,swipeEnabled,swipeVelocityThreshold,overlayAccessibilityLabel}=_ref;const getDrawerWidth=()=>{const{width=DEFAULT_DRAWER_WIDTH}=StyleSheet.flatten(drawerStyle)||{};if(typeof width==='string'&&width.endsWith('%')){const percentage=Number(width.replace(/%$/,''));if(Number.isFinite(percentage)){return dimensions.width*(percentage/100);}}return typeof width==='number'?width:0;};const drawerWidth=getDrawerWidth();const isOpen=drawerType==='permanent'?true:open;const isRight=drawerPosition==='right';const getDrawerTranslationX=React.useCallback(function(){const anonymous=function(open){if(drawerPosition==='left'){return open?0:-drawerWidth;}return open?0:drawerWidth;};anonymous.__closure={drawerPosition,drawerWidth};anonymous.__workletHash=16471748621831;anonymous.__initData=_worklet_16471748621831_init_data;return anonymous;}(),[drawerPosition,drawerWidth]);const hideStatusBar=React.useCallback(hide=>{if(hideStatusBarOnOpen){StatusBar.setHidden(hide,statusBarAnimation);}},[hideStatusBarOnOpen,statusBarAnimation]);React.useEffect(()=>{hideStatusBar(isOpen);return()=>hideStatusBar(false);},[isOpen,hideStatusBarOnOpen,statusBarAnimation,hideStatusBar]);const interactionHandleRef=React.useRef(null);const startInteraction=()=>{interactionHandleRef.current=InteractionManager.createInteractionHandle();};const endInteraction=()=>{if(interactionHandleRef.current!=null){InteractionManager.clearInteractionHandle(interactionHandleRef.current);interactionHandleRef.current=null;}};const hideKeyboard=()=>{if(keyboardDismissMode==='on-drag'){Keyboard.dismiss();}};const onGestureStart=()=>{startInteraction();hideKeyboard();hideStatusBar(true);};const onGestureFinish=()=>{endInteraction();};const hitSlop=isRight?{right:0,width:isOpen?undefined:swipeEdgeWidth}:{left:0,width:isOpen?undefined:swipeEdgeWidth};const touchStartX=useSharedValue(0);const touchX=useSharedValue(0);const translationX=useSharedValue(getDrawerTranslationX(open));const gestureState=useSharedValue(GestureState.UNDETERMINED);const toggleDrawer=React.useCallback(function(){const anonymous=function(_ref2){let{open,isUserInitiated,velocity}=_ref2;const translateX=getDrawerTranslationX(open);touchStartX.value=0;touchX.value=0;translationX.value=withSpring(translateX,{velocity,stiffness:1000,damping:500,mass:3,overshootClamping:true,restDisplacementThreshold:0.01,restSpeedThreshold:0.01,reduceMotion:'never'});if(!isUserInitiated){return;}if(open){runOnJS(onOpen)();}else{runOnJS(onClose)();}};anonymous.__closure={getDrawerTranslationX,touchStartX,touchX,translationX,withSpring,runOnJS,onOpen,onClose};anonymous.__workletHash=1956860183394;anonymous.__initData=_worklet_1956860183394_init_data;return anonymous;}(),[getDrawerTranslationX,onClose,onOpen,touchStartX,touchX,translationX]);React.useEffect(()=>toggleDrawer({open,isUserInitiated:false}),[open,toggleDrawer]);const onGestureEvent=useAnimatedGestureHandler({onStart:function(){const anonymous=function(event,ctx){ctx.hasCalledOnStart=false;ctx.startX=translationX.value;gestureState.value=event.state;touchStartX.value=event.x;};anonymous.__closure={translationX,gestureState,touchStartX};anonymous.__workletHash=9028705678581;anonymous.__initData=_worklet_9028705678581_init_data;return anonymous;}(),onActive:function(){const anonymous=function(event,ctx){touchX.value=event.x;translationX.value=ctx.startX+event.translationX;gestureState.value=event.state;if(!ctx.hasCalledOnStart){ctx.hasCalledOnStart=true;runOnJS(onGestureStart)();}};anonymous.__closure={touchX,translationX,gestureState,runOnJS,onGestureStart};anonymous.__workletHash=12554508167919;anonymous.__initData=_worklet_12554508167919_init_data;return anonymous;}(),onEnd:function(){const anonymous=function(event){gestureState.value=event.state;const nextOpen=Math.abs(event.translationX)>SWIPE_DISTANCE_MINIMUM&&Math.abs(event.translationX)>swipeVelocityThreshold||Math.abs(event.translationX)>swipeDistanceThreshold?drawerPosition==='left'?(event.velocityX===0?event.translationX:event.velocityX)>0:(event.velocityX===0?event.translationX:event.velocityX)<0:open;toggleDrawer({open:nextOpen,isUserInitiated:true,velocity:event.velocityX});};anonymous.__closure={gestureState,SWIPE_DISTANCE_MINIMUM,swipeVelocityThreshold,swipeDistanceThreshold,drawerPosition,open,toggleDrawer};anonymous.__workletHash=8567746620610;anonymous.__initData=_worklet_8567746620610_init_data;return anonymous;}(),onFinish:function(){const anonymous=function(){runOnJS(onGestureFinish)();};anonymous.__closure={runOnJS,onGestureFinish};anonymous.__workletHash=16133114243642;anonymous.__initData=_worklet_16133114243642_init_data;return anonymous;}()});const translateX=useDerivedValue(function(){const anonymous=function(){const touchDistance=drawerType==='front'&&gestureState.value===GestureState.ACTIVE?minmax(drawerPosition==='left'?touchStartX.value-drawerWidth:dimensions.width-drawerWidth-touchStartX.value,0,dimensions.width):0;const translateX=drawerPosition==='left'?minmax(translationX.value+touchDistance,-drawerWidth,0):minmax(translationX.value-touchDistance,0,drawerWidth);return translateX;};anonymous.__closure={drawerType,gestureState,GestureState,minmax,drawerPosition,touchStartX,drawerWidth,dimensions,translationX};anonymous.__workletHash=15907379420268;anonymous.__initData=_worklet_15907379420268_init_data;return anonymous;}());const isRTL=I18nManager.getConstants().isRTL;const drawerAnimatedStyle=useAnimatedStyle(function(){const anonymous=function(){const distanceFromEdge=dimensions.width-drawerWidth;return{transform:drawerType==='permanent'?[]:[{translateX:(drawerType==='back'?0:translateX.value)+(drawerPosition==='left'?isRTL?-distanceFromEdge:0:isRTL?0:distanceFromEdge)}]};};anonymous.__closure={dimensions,drawerWidth,drawerType,translateX,drawerPosition,isRTL};anonymous.__workletHash=2542456789708;anonymous.__initData=_worklet_2542456789708_init_data;return anonymous;}());const contentAnimatedStyle=useAnimatedStyle(function(){const anonymous=function(){return{transform:drawerType==='permanent'?[]:[{translateX:drawerType==='front'?0:translateX.value+drawerWidth*(drawerPosition==='left'?1:-1)}]};};anonymous.__closure={drawerType,translateX,drawerWidth,drawerPosition};anonymous.__workletHash=2846592509997;anonymous.__initData=_worklet_2846592509997_init_data;return anonymous;}());const progress=useDerivedValue(function(){const anonymous=function(){return drawerType==='permanent'?1:interpolate(translateX.value,[getDrawerTranslationX(false),getDrawerTranslationX(true)],[0,1]);};anonymous.__closure={drawerType,interpolate,translateX,getDrawerTranslationX};anonymous.__workletHash=3581967911583;anonymous.__initData=_worklet_3581967911583_init_data;return anonymous;}());return React.createElement(DrawerProgressContext.Provider,{value:progress},React.createElement(PanGestureHandler,_extends({activeOffsetX:[-SWIPE_DISTANCE_MINIMUM,SWIPE_DISTANCE_MINIMUM],failOffsetY:[-SWIPE_DISTANCE_MINIMUM,SWIPE_DISTANCE_MINIMUM],hitSlop:hitSlop,enabled:drawerType!=='permanent'&&swipeEnabled,onGestureEvent:onGestureEvent},gestureHandlerProps),React.createElement(Animated.View,{style:[styles.main,{flexDirection:drawerType==='permanent'&&!isRight?'row-reverse':'row'}]},React.createElement(Animated.View,{style:[styles.content,contentAnimatedStyle]},React.createElement(View,{accessibilityElementsHidden:isOpen&&drawerType!=='permanent',importantForAccessibility:isOpen&&drawerType!=='permanent'?'no-hide-descendants':'auto',style:styles.content},renderSceneContent()),drawerType!=='permanent'?React.createElement(Overlay,{progress:progress,onPress:()=>toggleDrawer({open:false,isUserInitiated:true}),style:overlayStyle,accessibilityLabel:overlayAccessibilityLabel}):null),React.createElement(Animated.View,{removeClippedSubviews:true,style:[styles.container,{position:drawerType==='permanent'?'relative':'absolute',zIndex:drawerType==='back'?-1:0},drawerAnimatedStyle,drawerStyle]},renderDrawerContent()))));}const styles=StyleSheet.create({container:{top:0,bottom:0,maxWidth:'100%',width:DEFAULT_DRAWER_WIDTH},content:{flex:1},main:Object.assign({flex:1},null)});","map":{"version":3,"names":["React","I18nManager","InteractionManager","Keyboard","Platform","StatusBar","StyleSheet","View","Animated","interpolate","runOnJS","useAnimatedGestureHandler","useAnimatedStyle","useDerivedValue","useSharedValue","withSpring","DrawerProgressContext","GestureState","PanGestureHandler","Overlay","SWIPE_DISTANCE_MINIMUM","DEFAULT_DRAWER_WIDTH","_worklet_14676585981950_init_data","code","minmax","anonymous","value","start","end","Math","min","max","__closure","__workletHash","__initData","_worklet_16471748621831_init_data","_worklet_1956860183394_init_data","_worklet_9028705678581_init_data","_worklet_12554508167919_init_data","_worklet_8567746620610_init_data","_worklet_16133114243642_init_data","_worklet_15907379420268_init_data","_worklet_2542456789708_init_data","_worklet_2846592509997_init_data","_worklet_3581967911583_init_data","Drawer","_ref","dimensions","drawerPosition","drawerStyle","drawerType","gestureHandlerProps","hideStatusBarOnOpen","keyboardDismissMode","onClose","onOpen","open","overlayStyle","renderDrawerContent","renderSceneContent","statusBarAnimation","swipeDistanceThreshold","swipeEdgeWidth","swipeEnabled","swipeVelocityThreshold","overlayAccessibilityLabel","getDrawerWidth","width","flatten","endsWith","percentage","Number","replace","isFinite","drawerWidth","isOpen","isRight","getDrawerTranslationX","useCallback","hideStatusBar","hide","setHidden","useEffect","interactionHandleRef","useRef","startInteraction","current","createInteractionHandle","endInteraction","clearInteractionHandle","hideKeyboard","dismiss","onGestureStart","onGestureFinish","hitSlop","right","undefined","left","touchStartX","touchX","translationX","gestureState","UNDETERMINED","toggleDrawer","_ref2","isUserInitiated","velocity","translateX","stiffness","damping","mass","overshootClamping","restDisplacementThreshold","restSpeedThreshold","reduceMotion","onGestureEvent","onStart","event","ctx","hasCalledOnStart","startX","state","x","onActive","onEnd","nextOpen","abs","velocityX","onFinish","touchDistance","ACTIVE","isRTL","getConstants","drawerAnimatedStyle","distanceFromEdge","transform","contentAnimatedStyle","progress","createElement","Provider","_extends","activeOffsetX","failOffsetY","enabled","style","styles","main","flexDirection","content","accessibilityElementsHidden","importantForAccessibility","onPress","accessibilityLabel","removeClippedSubviews","container","position","zIndex","create","top","bottom","maxWidth","flex","Object","assign"],"sources":["C:\\Users\\Carlos\\Desktop\\LightingGrabberApp\\LightingGrabberApp\\node_modules\\@react-navigation\\drawer\\src\\views\\modern\\Drawer.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  I18nManager,\n  InteractionManager,\n  Keyboard,\n  Platform,\n  StatusBar,\n  StyleSheet,\n  View,\n} from 'react-native';\nimport Animated, {\n  interpolate,\n  runOnJS,\n  useAnimatedGestureHandler,\n  useAnimatedStyle,\n  useDerivedValue,\n  useSharedValue,\n  withSpring,\n} from 'react-native-reanimated';\n\nimport type { DrawerProps } from '../../types';\nimport DrawerProgressContext from '../../utils/DrawerProgressContext';\nimport {\n  GestureState,\n  PanGestureHandler,\n  PanGestureHandlerGestureEvent,\n} from '../GestureHandler';\nimport Overlay from './Overlay';\n\nconst SWIPE_DISTANCE_MINIMUM = 5;\nconst DEFAULT_DRAWER_WIDTH = '80%';\n\ntype ToggleOptions = {\n  open: boolean;\n  isUserInitiated: boolean;\n  velocity?: number;\n};\n\nconst minmax = (value: number, start: number, end: number) => {\n  'worklet';\n\n  return Math.min(Math.max(value, start), end);\n};\n\nexport default function Drawer({\n  dimensions,\n  drawerPosition,\n  drawerStyle,\n  drawerType,\n  gestureHandlerProps,\n  hideStatusBarOnOpen,\n  keyboardDismissMode,\n  onClose,\n  onOpen,\n  open,\n  overlayStyle,\n  renderDrawerContent,\n  renderSceneContent,\n  statusBarAnimation,\n  swipeDistanceThreshold,\n  swipeEdgeWidth,\n  swipeEnabled,\n  swipeVelocityThreshold,\n  overlayAccessibilityLabel,\n}: DrawerProps) {\n  const getDrawerWidth = (): number => {\n    const { width = DEFAULT_DRAWER_WIDTH } =\n      StyleSheet.flatten(drawerStyle) || {};\n\n    if (typeof width === 'string' && width.endsWith('%')) {\n      // Try to calculate width if a percentage is given\n      const percentage = Number(width.replace(/%$/, ''));\n\n      if (Number.isFinite(percentage)) {\n        return dimensions.width * (percentage / 100);\n      }\n    }\n\n    return typeof width === 'number' ? width : 0;\n  };\n\n  const drawerWidth = getDrawerWidth();\n\n  const isOpen = drawerType === 'permanent' ? true : open;\n  const isRight = drawerPosition === 'right';\n\n  const getDrawerTranslationX = React.useCallback(\n    (open: boolean) => {\n      'worklet';\n\n      if (drawerPosition === 'left') {\n        return open ? 0 : -drawerWidth;\n      }\n\n      return open ? 0 : drawerWidth;\n    },\n    [drawerPosition, drawerWidth]\n  );\n\n  const hideStatusBar = React.useCallback(\n    (hide: boolean) => {\n      if (hideStatusBarOnOpen) {\n        StatusBar.setHidden(hide, statusBarAnimation);\n      }\n    },\n    [hideStatusBarOnOpen, statusBarAnimation]\n  );\n\n  React.useEffect(() => {\n    hideStatusBar(isOpen);\n\n    return () => hideStatusBar(false);\n  }, [isOpen, hideStatusBarOnOpen, statusBarAnimation, hideStatusBar]);\n\n  const interactionHandleRef = React.useRef<number | null>(null);\n\n  const startInteraction = () => {\n    interactionHandleRef.current = InteractionManager.createInteractionHandle();\n  };\n\n  const endInteraction = () => {\n    if (interactionHandleRef.current != null) {\n      InteractionManager.clearInteractionHandle(interactionHandleRef.current);\n      interactionHandleRef.current = null;\n    }\n  };\n\n  const hideKeyboard = () => {\n    if (keyboardDismissMode === 'on-drag') {\n      Keyboard.dismiss();\n    }\n  };\n\n  const onGestureStart = () => {\n    startInteraction();\n    hideKeyboard();\n    hideStatusBar(true);\n  };\n\n  const onGestureFinish = () => {\n    endInteraction();\n  };\n\n  // FIXME: Currently hitSlop is broken when on Android when drawer is on right\n  // https://github.com/software-mansion/react-native-gesture-handler/issues/569\n  const hitSlop = isRight\n    ? // Extend hitSlop to the side of the screen when drawer is closed\n      // This lets the user drag the drawer from the side of the screen\n      { right: 0, width: isOpen ? undefined : swipeEdgeWidth }\n    : { left: 0, width: isOpen ? undefined : swipeEdgeWidth };\n\n  const touchStartX = useSharedValue(0);\n  const touchX = useSharedValue(0);\n  const translationX = useSharedValue(getDrawerTranslationX(open));\n  const gestureState = useSharedValue<GestureState>(GestureState.UNDETERMINED);\n\n  const toggleDrawer = React.useCallback(\n    ({ open, isUserInitiated, velocity }: ToggleOptions) => {\n      'worklet';\n\n      const translateX = getDrawerTranslationX(open);\n\n      touchStartX.value = 0;\n      touchX.value = 0;\n      translationX.value = withSpring(translateX, {\n        velocity,\n        stiffness: 1000,\n        damping: 500,\n        mass: 3,\n        overshootClamping: true,\n        restDisplacementThreshold: 0.01,\n        restSpeedThreshold: 0.01,\n        // @ts-expect-error: This is available in newer reanimated versions\n        reduceMotion: 'never',\n      });\n\n      if (!isUserInitiated) {\n        return;\n      }\n\n      if (open) {\n        runOnJS(onOpen)();\n      } else {\n        runOnJS(onClose)();\n      }\n    },\n    [getDrawerTranslationX, onClose, onOpen, touchStartX, touchX, translationX]\n  );\n\n  React.useEffect(\n    () => toggleDrawer({ open, isUserInitiated: false }),\n    [open, toggleDrawer]\n  );\n\n  const onGestureEvent = useAnimatedGestureHandler<\n    PanGestureHandlerGestureEvent,\n    { startX: number; hasCalledOnStart: boolean }\n  >({\n    onStart: (event, ctx) => {\n      ctx.hasCalledOnStart = false;\n      ctx.startX = translationX.value;\n      gestureState.value = event.state;\n      touchStartX.value = event.x;\n    },\n    onActive: (event, ctx) => {\n      touchX.value = event.x;\n      translationX.value = ctx.startX + event.translationX;\n      gestureState.value = event.state;\n\n      // onStart will _always_ be called, even when the activation\n      // criteria isn't met yet. This makes sure onGestureStart is only\n      // called when the criteria is really met.\n      if (!ctx.hasCalledOnStart) {\n        ctx.hasCalledOnStart = true;\n        runOnJS(onGestureStart)();\n      }\n    },\n    onEnd: (event) => {\n      gestureState.value = event.state;\n\n      const nextOpen =\n        (Math.abs(event.translationX) > SWIPE_DISTANCE_MINIMUM &&\n          Math.abs(event.translationX) > swipeVelocityThreshold) ||\n        Math.abs(event.translationX) > swipeDistanceThreshold\n          ? drawerPosition === 'left'\n            ? // If swiped to right, open the drawer, otherwise close it\n              (event.velocityX === 0 ? event.translationX : event.velocityX) > 0\n            : // If swiped to left, open the drawer, otherwise close it\n              (event.velocityX === 0 ? event.translationX : event.velocityX) < 0\n          : open;\n\n      toggleDrawer({\n        open: nextOpen,\n        isUserInitiated: true,\n        velocity: event.velocityX,\n      });\n    },\n    onFinish: () => {\n      runOnJS(onGestureFinish)();\n    },\n  });\n\n  const translateX = useDerivedValue(() => {\n    // Comment stolen from react-native-gesture-handler/DrawerLayout\n    //\n    // While closing the drawer when user starts gesture outside of its area (in greyed\n    // out part of the window), we want the drawer to follow only once finger reaches the\n    // edge of the drawer.\n    // E.g. on the diagram below drawer is illustrate by X signs and the greyed out area by\n    // dots. The touch gesture starts at '*' and moves left, touch path is indicated by\n    // an arrow pointing left\n    // 1) +---------------+ 2) +---------------+ 3) +---------------+ 4) +---------------+\n    //    |XXXXXXXX|......|    |XXXXXXXX|......|    |XXXXXXXX|......|    |XXXXX|.........|\n    //    |XXXXXXXX|......|    |XXXXXXXX|......|    |XXXXXXXX|......|    |XXXXX|.........|\n    //    |XXXXXXXX|......|    |XXXXXXXX|......|    |XXXXXXXX|......|    |XXXXX|.........|\n    //    |XXXXXXXX|......|    |XXXXXXXX|.<-*..|    |XXXXXXXX|<--*..|    |XXXXX|<-----*..|\n    //    |XXXXXXXX|......|    |XXXXXXXX|......|    |XXXXXXXX|......|    |XXXXX|.........|\n    //    |XXXXXXXX|......|    |XXXXXXXX|......|    |XXXXXXXX|......|    |XXXXX|.........|\n    //    |XXXXXXXX|......|    |XXXXXXXX|......|    |XXXXXXXX|......|    |XXXXX|.........|\n    //    +---------------+    +---------------+    +---------------+    +---------------+\n    //\n    // For the above to work properly we define animated value that will keep start position\n    // of the gesture. Then we use that value to calculate how much we need to subtract from\n    // the translationX. If the gesture started on the greyed out area we take the distance from the\n    // edge of the drawer to the start position. Otherwise we don't subtract at all and the\n    // drawer be pulled back as soon as you start the pan.\n    //\n    // This is used only when drawerType is \"front\"\n    const touchDistance =\n      drawerType === 'front' && gestureState.value === GestureState.ACTIVE\n        ? minmax(\n            drawerPosition === 'left'\n              ? touchStartX.value - drawerWidth\n              : dimensions.width - drawerWidth - touchStartX.value,\n            0,\n            dimensions.width\n          )\n        : 0;\n\n    const translateX =\n      drawerPosition === 'left'\n        ? minmax(translationX.value + touchDistance, -drawerWidth, 0)\n        : minmax(translationX.value - touchDistance, 0, drawerWidth);\n\n    return translateX;\n  });\n\n  const isRTL = I18nManager.getConstants().isRTL;\n  const drawerAnimatedStyle = useAnimatedStyle(() => {\n    const distanceFromEdge = dimensions.width - drawerWidth;\n\n    return {\n      transform:\n        drawerType === 'permanent'\n          ? // Reanimated needs the property to be present, but it results in Browser bug\n            // https://bugs.chromium.org/p/chromium/issues/detail?id=20574\n            []\n          : [\n              {\n                translateX:\n                  // The drawer stays in place when `drawerType` is `back`\n                  (drawerType === 'back' ? 0 : translateX.value) +\n                  (drawerPosition === 'left'\n                    ? isRTL\n                      ? -distanceFromEdge\n                      : 0\n                    : isRTL\n                    ? 0\n                    : distanceFromEdge),\n              },\n            ],\n    };\n  });\n\n  const contentAnimatedStyle = useAnimatedStyle(() => {\n    return {\n      transform:\n        drawerType === 'permanent'\n          ? // Reanimated needs the property to be present, but it results in Browser bug\n            // https://bugs.chromium.org/p/chromium/issues/detail?id=20574\n            []\n          : [\n              {\n                translateX:\n                  // The screen content stays in place when `drawerType` is `front`\n                  drawerType === 'front'\n                    ? 0\n                    : translateX.value +\n                      drawerWidth * (drawerPosition === 'left' ? 1 : -1),\n              },\n            ],\n    };\n  });\n\n  const progress = useDerivedValue(() => {\n    return drawerType === 'permanent'\n      ? 1\n      : interpolate(\n          translateX.value,\n          [getDrawerTranslationX(false), getDrawerTranslationX(true)],\n          [0, 1]\n        );\n  });\n\n  return (\n    <DrawerProgressContext.Provider value={progress}>\n      <PanGestureHandler\n        activeOffsetX={[-SWIPE_DISTANCE_MINIMUM, SWIPE_DISTANCE_MINIMUM]}\n        failOffsetY={[-SWIPE_DISTANCE_MINIMUM, SWIPE_DISTANCE_MINIMUM]}\n        hitSlop={hitSlop}\n        enabled={drawerType !== 'permanent' && swipeEnabled}\n        onGestureEvent={onGestureEvent}\n        {...gestureHandlerProps}\n      >\n        {/* Immediate child of gesture handler needs to be an Animated.View */}\n        <Animated.View\n          style={[\n            styles.main,\n            {\n              flexDirection:\n                drawerType === 'permanent' && !isRight ? 'row-reverse' : 'row',\n            },\n          ]}\n        >\n          <Animated.View style={[styles.content, contentAnimatedStyle]}>\n            <View\n              accessibilityElementsHidden={isOpen && drawerType !== 'permanent'}\n              importantForAccessibility={\n                isOpen && drawerType !== 'permanent'\n                  ? 'no-hide-descendants'\n                  : 'auto'\n              }\n              style={styles.content}\n            >\n              {renderSceneContent()}\n            </View>\n            {drawerType !== 'permanent' ? (\n              <Overlay\n                progress={progress}\n                onPress={() =>\n                  toggleDrawer({ open: false, isUserInitiated: true })\n                }\n                style={overlayStyle}\n                accessibilityLabel={overlayAccessibilityLabel}\n              />\n            ) : null}\n          </Animated.View>\n          <Animated.View\n            removeClippedSubviews={Platform.OS !== 'ios'}\n            style={[\n              styles.container,\n              {\n                position: drawerType === 'permanent' ? 'relative' : 'absolute',\n                zIndex: drawerType === 'back' ? -1 : 0,\n              },\n              drawerAnimatedStyle,\n              drawerStyle as any,\n            ]}\n          >\n            {renderDrawerContent()}\n          </Animated.View>\n        </Animated.View>\n      </PanGestureHandler>\n    </DrawerProgressContext.Provider>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    top: 0,\n    bottom: 0,\n    maxWidth: '100%',\n    width: DEFAULT_DRAWER_WIDTH,\n  },\n  content: {\n    flex: 1,\n  },\n  main: {\n    flex: 1,\n    ...Platform.select({\n      // FIXME: We need to hide `overflowX` on Web so the translated content doesn't show offscreen.\n      // But adding `overflowX: 'hidden'` prevents content from collapsing the URL bar.\n      web: null,\n      default: { overflow: 'hidden' },\n    }),\n  },\n});\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}